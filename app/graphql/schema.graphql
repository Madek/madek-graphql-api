type Collection {
  createdAt: ISO8601DateTime
  getMetadataAndPreviews: Boolean
  id: String
  layout: String
  mediaEntries(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    orderBy: OrderByEnum
  ): MediaEntryConnection
  responsibleUserId: String
  sorting: String
  updatedAt: ISO8601DateTime
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type MediaEntry {
  createdAt: ISO8601DateTime
  id: String
  title: String
}

"""
The connection type for MediaEntry.
"""
type MediaEntryConnection {
  """
  A list of edges.
  """
  edges: [MediaEntryEdge]

  """
  A list of nodes.
  """
  nodes: [MediaEntry]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type MediaEntryEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: MediaEntry
}

"""
Paremeter for ordering resources
"""
enum OrderByEnum {
  CREATED_AT_ASC
  CREATED_AT_DESC
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  """
  Find all MediaEntries
  """
  allMediaEntries(first: Int, orderBy: OrderByEnum): [MediaEntry!]

  """
  Find a Collection by ID
  """
  collection(id: ID!, orderBy: OrderByEnum): Collection!

  """
  Find a MediaEntry by ID
  """
  mediaEntry(id: ID!): MediaEntry
}